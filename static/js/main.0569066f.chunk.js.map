{"version":3,"sources":["components/CurrencyOptions.js","components/TimeOptions.js","components/SettingsContainer.js","components/Offer.js","components/CurrencyInfo.js","components/Time.js","components/Container.js","App.js","index.js"],"names":["CurrencyOptions","props","options","Object","keys","currencyValue","map","name","key","value","className","onChange","changeCurrency","refreshTimeOptions","TimeOptions","option","changeRefreshTime","SettingsContainer","sortableOptions","Offer","title","actualCurrency","CurrencyInfo","getActualValue","reduce","obj","buy","sell","Time","formatTimeUnit","time","getFormatedTime","date","Date","day","getDate","month","getMonth","year","getFullYear","hours","getHours","min","getMinutes","sec","getSeconds","startCurrentTimeInterval","setState","intervalCurrentTime","setInterval","actualTime","state","this","clearInterval","Component","Container","intervalCurrencyRefetch","refreshtime","fetchCurrencyData","fetch","then","response","json","data","startCurrencyRefetchInterval","e","target","currencyInfo","PLN","React","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.0569066f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../styles/CurrencyOptions.css\";\r\n\r\nconst CurrencyOptions = props => {\r\n  const options = Object.keys(props.currencyValue).map(name => {\r\n    return (\r\n      <option key={name} value={name}>\r\n        {name}\r\n      </option>\r\n    );\r\n  });\r\n  return (\r\n    <div className=\"currency-options\">\r\n      <select onChange={props.changeCurrency}>{options}</select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrencyOptions;\r\n","import React from \"react\";\r\nimport \"../styles/TimeOptions.css\";\r\n\r\nconst second = 1000;\r\nconst refreshTimeOptions = [5 * second, 10 * second, 30 * second, 60 * second];\r\n\r\nconst TimeOptions = props => {\r\n  const options = refreshTimeOptions.map((option, key) => {\r\n    return (\r\n      <option key={key} value={option}>\r\n        {option / 1000 + \"s\"}\r\n      </option>\r\n    );\r\n  });\r\n  return (\r\n    <div className=\"time-options\">\r\n      <select onChange={props.changeRefreshTime}>{options}</select>\r\n      <div className=\"orange-box\">\r\n        <i className=\"fa fa-clock-o\"></i>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimeOptions;\r\n","import React from \"react\";\r\nimport CurrencyOptions from \"./CurrencyOptions\";\r\nimport TimeOptions from \"./TimeOptions\";\r\nimport \"../styles/SettingsContainer.css\";\r\n\r\nconst SettingsContainer = props => {\r\n  return (\r\n    <div className=\"settings-container\">\r\n      <CurrencyOptions\r\n        sortableOptions={props.sortableOptions}\r\n        changeCurrency={props.changeCurrency}\r\n        currencyValue={props.currencyValue}\r\n      />\r\n      <TimeOptions changeRefreshTime={props.changeRefreshTime} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsContainer;\r\n","import React from \"react\";\r\nimport \"../styles/Offer.css\";\r\n\r\nconst Offer = props => {\r\n  return (\r\n    <div className=\"offer-container\">\r\n      <span className=\"offer-title\">{props.title}</span>\r\n      <div>\r\n        <span className=\"offer-value\">{props.value}</span>\r\n        <span className=\"offer-currency\">{props.actualCurrency}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Offer;\r\n","import React from \"react\";\r\nimport Offer from \"./Offer\";\r\nimport \"../styles/CurrencyInfo.css\";\r\n\r\nconst CurrencyInfo = props => {\r\n  const getActualValue = currencyValue => {\r\n    let actualCurrency = props.actualCurrency;\r\n    let filtered = Object.keys(currencyValue).reduce((obj, key) => {\r\n      if (key === actualCurrency) {\r\n        obj = currencyValue[key];\r\n      }\r\n      return obj;\r\n    }, {});\r\n    return filtered;\r\n  };\r\n  return (\r\n    <div className=\"currency-info-container\">\r\n      <Offer\r\n        title=\"Kupno\"\r\n        value={getActualValue(props.currencyValue).buy}\r\n        actualCurrency={props.actualCurrency}\r\n      />\r\n      <Offer\r\n        title=\"SprzedaÅ¼\"\r\n        value={getActualValue(props.currencyValue).sell}\r\n        actualCurrency={props.actualCurrency}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrencyInfo;\r\n","import React, { Component } from \"react\";\r\nimport \"../styles/Time.css\";\r\n\r\nclass Time extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      intervalCurrentTime: null,\r\n      actualTime: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      actualTime: this.getFormatedTime(),\r\n    });\r\n    this.startCurrentTimeInterval();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.state.intervalCurrentTime);\r\n  }\r\n\r\n  formatTimeUnit = (time) => (time < 10 ? \"0\" + time : time);\r\n\r\n  getFormatedTime = () => {\r\n    let date = new Date();\r\n    var day = date.getDate();\r\n    var month = date.getMonth() + 1;\r\n    var year = date.getFullYear();\r\n    var hours = date.getHours();\r\n    var min = date.getMinutes();\r\n    var sec = date.getSeconds();\r\n\r\n    return `\r\n    ${this.formatTimeUnit(hours)}:\r\n    ${this.formatTimeUnit(min)}:\r\n    ${this.formatTimeUnit(sec)}\r\n     / ${this.formatTimeUnit(day)}:\r\n     ${this.formatTimeUnit(month)}:\r\n     ${year}`;\r\n  };\r\n\r\n  startCurrentTimeInterval = () => {\r\n    this.setState({\r\n      intervalCurrentTime: setInterval(() => {\r\n        this.setState({\r\n          actualTime: this.getFormatedTime(),\r\n        });\r\n      }, 1000),\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return <div className=\"time-container\">{this.state.actualTime}</div>;\r\n  }\r\n}\r\n\r\nexport default Time;\r\n","import React from \"react\";\r\nimport SettingsContainer from \"./SettingsContainer\";\r\nimport CurrencyInfo from \"./CurrencyInfo\";\r\nimport Time from \"./Time\";\r\nimport \"../styles/Container.css\";\r\n\r\nclass Container extends React.Component {\r\n  state = {\r\n    intervalCurrencyRefetch: null,\r\n    refreshtime: 5000,\r\n    actualCurrency: \"USD\",\r\n    currencyValue: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      intervalCurrencyRefetch: this.startCurrencyRefetchInterval(\r\n        this.state.refreshtime\r\n      )\r\n    });\r\n    this.fetchCurrencyData();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.state.intervalCurrencyRefetch);\r\n  }\r\n\r\n  fetchCurrencyData = () => {\r\n    fetch(\"https://blockchain.info/pl/ticker\")\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          currencyValue: data\r\n        })\r\n      );\r\n  };\r\n\r\n  startCurrencyRefetchInterval = time => {\r\n    return setInterval(() => {\r\n      this.fetchCurrencyData();\r\n    }, time);\r\n  };\r\n\r\n  changeRefreshTime = e => {\r\n    clearInterval(this.state.intervalCurrencyRefetch);\r\n    this.setState({\r\n      refreshtime: e.target.value,\r\n      intervalCurrencyRefetch: this.startCurrencyRefetchInterval(e.target.value)\r\n    });\r\n  };\r\n\r\n  changeCurrency = e => {\r\n    this.setState({\r\n      actualCurrency: e.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let currencyInfo = \"\";\r\n    if (this.state.currencyValue.PLN) {\r\n      currencyInfo = (\r\n        <CurrencyInfo\r\n          currencyValue={this.state.currencyValue}\r\n          actualCurrency={this.state.actualCurrency}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"app-container\">\r\n        <SettingsContainer\r\n          changeRefreshTime={this.changeRefreshTime}\r\n          changeCurrency={this.changeCurrency}\r\n          currencyValue={this.state.currencyValue}\r\n        />\r\n        {currencyInfo}\r\n        <Time />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\nimport Container from \"./components/Container\";\r\nimport \"./styles/App.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Container />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}